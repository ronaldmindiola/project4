---
// Button.astro
export interface Props {
  text: string;
  href?: string;
  type?: "button" | "submit" | "reset";
  variant?: "primary" | "secondary" | "outline";
  size?: "small" | "medium" | "large";
  fullWidth?: boolean;
  disabled?: boolean;
  onClick?: string;
}

const {
  text,
  href,
  type = "button",
  variant = "primary",
  size = "medium",
  fullWidth = false,
  disabled = false,
  onClick
} = Astro.props;

const baseStyles = "inline-flex items-center justify-center rounded-md font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors";

const variantStyles = {
  primary: "bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500",
  secondary: "bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500",
  outline: "border border-gray-300 text-gray-700 hover:bg-gray-100 focus:ring-gray-500"
};

const sizeStyles = {
  small: "px-3 py-2 text-sm",
  medium: "px-4 py-2 text-base",
  large: "px-6 py-3 text-lg"
};

const widthStyles = fullWidth ? "w-full" : "";
const disabledStyles = disabled ? "opacity-50 cursor-not-allowed" : "";

const classes = `${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${widthStyles} ${disabledStyles}`;

---

{href ? (
  <a href={href} class={classes} role="button" aria-disabled={disabled}>
    {text}
  </a>
) : (
  <button 
    type={type} 
    class={classes} 
    disabled={disabled} 
    onclick={onClick}
  >
    {text}
  </button>
)}